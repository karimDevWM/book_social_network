name: BSN frontend Pipeline

on:
    push: 
        branches: 
            - ci/pipeline
        paths: 
            - book-network-ui/**
            - docker/frontend/**
            - 'docker-compose.yml'
            - .github/workflows/*-frontend.yml

jobs:
    build-image:
        name: Build Frontend Docker image
        runs-on: ubuntu-latest
        steps:
            - name: checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            # - name: extract project version
            #   id: extract_version
            #   run: |
            #     cd book-network-ui
            #     echo "VERSION=$(jq -r '.version' package.json)" >> $GITHUB_OUTPUT
            
            #     - name: Login to GHCR
            #     uses: docker/login-action@v1
            #     with:
            #       username: ${{github.actor}}
            #       password: ${{secrets.GITHUB_TOKEN}}
              
            - name: 'Build Inventory Image'
              uses: docker/build-push-action@v5
              with:
                context: book-network-ui
                file: docker/frontend/Dockerfile
                push: true
                platforms: linux/amd64
                # tags: ${{ github.actor }}/bsn-ui:${{ steps.extract_version.outputs.VERSION }},${{ github.actor }}/bsn-ui:latest
                tags: ghcr.io/karimdevwm/bsn-ui:latest
            
    deploy:
        needs: build-image
        name: deploy image
        runs-on: ubuntu-latest

        steps:
        - name: install ssh keys
        # check this thread tounderstand why its needed:
        # <https://stackoverflow.com/a/70447517
          run: |
            install -m 600 -D /dev/null ~/.ssh/id_rsa
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
            ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
        - name: connect and pull
          run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && docker compose pull && docker compose up -d && exit"
        - name: cleanup
          run: rm -rf ~/.ssh